// В функции main, мы создаем переменную a и устанавливаем ей значение 1. Затем мы создаем указатель p и присваиваем ему адрес переменной a, т.е., p указывает на a.

// Затем мы выводим значение, на которое указывает p, используя fmt.Println(*p). Таким образом, первый fmt.Println выводит значение переменной a, которое равно 1. Выводится "1".

// Затем мы вызываем функцию update(p), передавая указатель p в нее. Внутри функции update, создается новая переменная b со значением 2, и указатель p переопределяется так, чтобы он указывал на b вместо a.
// Однако эта переопределение происходит только внутри функции update, и оно не влияет на оригинальный указатель p, который был передан в функцию.

// После вызова функции update, мы снова выводим значение, на которое указывает p, используя fmt.Println(*p).
// Таким образом, второй fmt.Println также выводит значение переменной a, которое по-прежнему равно 1. Выводится "1".

package main

import "fmt"

func update(p **int) {
	b := 2
	*p = &b // Здесь мы обновляем значение, на которое указывает указатель *p
}

func main() {
	a := 1
	p := &a
	fmt.Println(*p) // Выводит значение переменной a (1)
	update(&p)      // Передаем указатель на указатель p
	fmt.Println(*p) // Выводит значение переменной b (2)
}
